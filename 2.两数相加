给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807
-----------------------------------------------------------------------------------------
1.解法--执行时间超99.97%--内存消耗超过84.11%
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode current=new ListNode(0),result=current;
        int sum=0,more=0;
        while(l1!=null || l2!=null){
            sum=more;
            if(l2!=null){
                sum+=l2.val;
                l2=l2.next;
            }
            if(l1!=null){
                sum+=l1.val;
                l1=l1.next;
            }
            more=sum/10;
            result.next=new ListNode(sum%10);
            result=result.next;
        }
        if(more>0){
            result.next=new ListNode(more);
        }
        return current.next;
    }
}
