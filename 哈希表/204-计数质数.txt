统计所有小于非负整数 n 的质数的数量。

示例:

输入: 10
输出: 4
解释: 小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。

1.题解---采用厄拉多塞筛选法
只遍历奇数（质数的奇数倍全部剔除，剩下的就是质数）。
第一轮循环从3开始，依次把3x3,3x5,3x7,3x9......等3的奇数倍数排除。
第二轮循环,依次把5x5,5x7,5x11,5x13......等5的奇数倍数排除，你会发现这里怎么少了一个5x9？其实5x9=3x15已经在上一轮循环被排除。
	public int countPrimes(int n) {
        int result = 0;
        boolean[] b = new boolean[n];   // 初始化默认值都为 false，为质数标记
        if(2 < n) result++; // 如果大于 2 则一定拥有 2 这个质数
        
        for(int i = 3; i < n; i += 2){  // 从 3 开始遍历，且只遍历奇数
            if(!b[i]){  // 是质数
                for(int j = 3; i * j < n; j += 2){
                    b[i * j] = true;    // 将当前质数的奇数倍都设置成非质数标记 true
                }
                result++;   // 质数个数 +1
            }
        }
        return result;
    }

