给定一个整数数组 a，其中1 ≤ a[i] ≤ n （n为数组长度）, 其中有些元素出现两次而其他元素出现一次。

找到所有出现两次的元素。

你可以不用到任何额外空间并在O(n)时间复杂度内解决这个问题吗？

示例：

输入:
[4,3,2,7,8,2,3,1]

输出:
[2,3]

1.该解法执行时间较慢--仅超过20%
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> resultList=new ArrayList<>();
        HashSet<Integer> hashSet=new HashSet<>();
        for(int item:nums){
            if(hashSet.contains(item)){
                resultList.add(item);
            }else{
                hashSet.add(item);
            }
        }
        return resultList;
    }
}
