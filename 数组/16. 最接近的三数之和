
给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。

 

示例：

输入：nums = [-1,2,1,-4], target = 1
输出：2
解释：与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。
 

提示：

3 <= nums.length <= 10^3
-10^3 <= nums[i] <= 10^3
-10^4 <= target <= 10^4
通过次数208,885提交次数454,647



class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int before=nums[0]+nums[1]+nums[2];
        for(int i=0;i<nums.length;i++){
            int begin=i+1,end=nums.length-1;
            while(begin<end){
                int result=nums[i]+nums[begin]+nums[end];
                if(Math.abs(before-target) > Math.abs(result-target)){
                    before=result;
                }
                if(result>target){
                    end--;
                    continue;
                }else if(result<target){
                    begin++;
                    continue;
                }
                return before;
            }
        }
        return before;
    }
}
