//给定一个只包含整数的有序数组 nums ，每个元素都会出现两次，唯有一个数只会出现一次，请找出这个唯一的数字。 
//
// 
//
// 示例 1: 
//
// 
//输入: nums = [1,1,2,3,3,4,4,8,8]
//输出: 2
// 
//
// 示例 2: 
//
// 
//输入: nums =  [3,3,7,7,10,11,11]
//输出: 10
// 
//
// 
//
// 
//
// 
//
// 提示: 
//
// 
// 1 <= nums.length <= 10⁵ 
// 0 <= nums[i] <= 10⁵ 
// 
//
// 
//
// 进阶: 采用的方案可以在 O(log n) 时间复杂度和 O(1) 空间复杂度中运行吗？ 
//
// 
//
// 注意：本题与主站 540 题相同：https://leetcode-cn.com/problems/single-element-in-a-sorted-
//array/ 
// Related Topics 数组 二分查找 👍 10 👎 0


//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    //二分解法
    public int singleNonDuplicate(int[] nums) {
        int index = -1, l = 0, r = nums.length - 1;
        while (l <= r) {
            int mid = (r - l) / 2 + l;
            //找到mid所在是右侧有一个相同的数还是左侧有一个相同的数
            if (mid + 1 < nums.length && nums[mid] == nums[mid + 1]) {
                //下标为偶数,奇数
                //因为题目固定每个数最多重复两次,计算位置能否被2整除，能被2整除则说明左指针需要+2移动到下一个数
                if (mid % 2 == 0) {
                    l = mid + 2;
                } else {
                    r = mid - 1;
                }
            } else if (mid > 0 && nums[mid - 1] == nums[mid]) {
                //下标为奇数偶数
                if (mid % 2 == 0) {
                    r = mid - 2;
                } else {
                    l = mid + 1;
                }
            } else {
                index = nums[mid];
                break;
            }
        }
        return index;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
