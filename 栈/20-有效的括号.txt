给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：

左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。

示例 1:

输入: "()"
输出: true
示例 2:

输入: "()[]{}"
输出: true
示例 3:

输入: "(]"
输出: false
示例 4:

输入: "([)]"
输出: false
示例 5:

输入: "{[]}"
输出: true

1.题解---执行时间耗时较长
class Solution {
    public boolean isValid(String s) {
        //所有括号放入到map中
        Map<Character,Character> characterMap=new HashMap<>();
        characterMap.put(')','(');
        characterMap.put(']','[');
        characterMap.put('}','{');
        //根据栈先入后出，先判断内层的括号是否合法，后判断外层的括号
        Stack<Character> stack=new Stack<>();
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            //判断右括号
            if(characterMap.containsKey(c)){
                //如果栈中拿出的第一个左括号，和字符串遍历的右括号不匹配则该字符串括号非法
                char elementTop=stack.empty()?'#':stack.pop();
                if(elementTop!=characterMap.get(c)){
                    return false;
                }
            }else{
                stack.push(c);//栈中放入左括号
            }
        }
        return stack.isEmpty();
    }
}
