//给定 s 和 t 两个字符串，当它们分别被输入到空白的文本编辑器后，请你判断二者是否相等。# 代表退格字符。 
//
// 如果相等，返回 true ；否则，返回 false 。 
//
// 注意：如果对空文本输入退格字符，文本继续为空。 
//
// 
//
// 示例 1： 
//
// 
//输入：s = "ab#c", t = "ad#c"
//输出：true
//解释：S 和 T 都会变成 “ac”。
// 
//
// 示例 2： 
//
// 
//输入：s = "ab##", t = "c#d#"
//输出：true
//解释：s 和 t 都会变成 “”。
// 
//
// 示例 3： 
//
// 
//输入：s = "a##c", t = "#a#c"
//输出：true
//解释：s 和 t 都会变成 “c”。
// 
//
// 示例 4： 
//
// 
//输入：s = "a#c", t = "b"
//输出：false
//解释：s 会变成 “c”，但 t 仍然是 “b”。 
//
// 
//
// 提示： 
//
// 
// 1 <= s.length, t.length <= 200 
// s 和 t 只含有小写字母以及字符 '#' 
// 
//
// 
//
// 进阶： 
//
// 
// 你可以用 O(N) 的时间复杂度和 O(1) 的空间复杂度解决该问题吗？ 
// 
//
// 
// Related Topics 栈 双指针 字符串 模拟 👍 317 👎 0


//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public boolean backspaceCompare(String s, String t) {
        int skipS=0,skipT=0;
        int i=s.length()-1,j=t.length()-1;
        while(i>=0 || j>=0){
            //去除s字符串的#
            while(i>=0){
                if (s.charAt(i)=='#'){
                    i--;
                    skipS++;
                }else if (skipS>0){
                    skipS--;
                    i--;
                }else {
                    break;
                }
            }
            //去除t字符串的#
            while(j>=0){
                if(t.charAt(j)=='#'){
                    j--;
                    skipT++;
                }else if(skipT>0){
                    skipT--;
                    j--;
                }else {
                    break;
                }
            }
            //如果有一个剩余，则代表当前两个字符串不一致，如果都有剩余，遍历剩余的字符串是否相同
            if(i>=0 && j>=0){
                if(s.charAt(i)!=t.charAt(j)){
                    return false;
                }
            }else {
                if(i>=0 || j>=0){
                    return false;
                }
            }
            i--;
            j--;
        }
        return true;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
