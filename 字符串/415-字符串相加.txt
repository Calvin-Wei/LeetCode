给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和。

注意：

num1 和num2 的长度都小于 5100.
num1 和num2 都只包含数字 0-9.
num1 和num2 都不包含任何前导零。
你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式。

1.代码较长-执行时间超过88%，内存消耗超过87%
class Solution {
    public String addStrings(String num1, String num2) {
        StringBuilder sum=new StringBuilder("");
        int last=0;
        if(num1.length()>=num2.length()){//根据长度进行判断，遍历较长的字符串，从字符串末尾开始遍历相加，就是个位相加
            for(int i=num1.length()-1,j=num2.length()-1;i>=0;i--,j--){
                int a=(int)num1.charAt(i)-(int)'0';
                int b=0;
                if(j>=0){
                    b=(int)num2.charAt(j)-(int)'0';
                }
                sum.append((a+b+last)%10);
                last=(a+b+last)/10;
            }
        }else{
            for(int i=num2.length()-1,j=num1.length()-1;i>=0;i--,j--){
                int a=0;
                if(j>=0){
                    a=(int)num1.charAt(j)-(int)'0';
                }
                int b=(int)num2.charAt(i)-(int)'0';
                sum.append((a+b+last)%10);
                last=(a+b+last)/10;
            }
        }
        if(last>0){
            sum.append(last);
        }
        return sum.reverse().toString();
    }
}
